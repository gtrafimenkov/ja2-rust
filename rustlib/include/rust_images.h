#pragma once

/* Warning, this file is autogenerated by cbindgen. Don't modify this manually. */

#include <stdarg.h>
#include <stdbool.h>
#include <stdint.h>
#include <stdlib.h>

/**
 * Palette structure, mimics that of Win32
 */
struct SGPPaletteEntry {
  uint8_t red;
  uint8_t green;
  uint8_t blue;
  uint8_t _unused;
};

/**
 * Structure that describes one image from an indexed STCI file
 */
struct Subimage {
  uint32_t data_offset;
  uint32_t data_length;
  int16_t x_offset;
  int16_t y_offset;
  uint16_t height;
  uint16_t width;
};

struct Image {
  uint16_t width;
  uint16_t height;
  uint8_t bit_depth;
  struct SGPPaletteEntry *palette;
  uint16_t *palette16bpp;
  uint8_t *app_data;
  uint32_t app_data_size;
  uint8_t *image_data;
  uint32_t image_data_size;
  struct Subimage *subimages;
  uint16_t number_of_subimages;
};

#ifdef __cplusplus
extern "C" {
#endif // __cplusplus

/**
 * Load STI image.
 * If the function was successful, don't forget to free memory allocated for palette, subimages, app_data, image_data.
 */
struct Image *LoadSTCIFileToImage(const char *path,
                                  bool load_app_data);

#ifdef __cplusplus
} // extern "C"
#endif // __cplusplus
